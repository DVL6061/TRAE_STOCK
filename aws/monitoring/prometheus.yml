# Prometheus Configuration for Stock Prediction System
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'stock-prediction'
    environment: 'production'

# Rule files
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Stock Prediction Backend API
  - job_name: 'stock-prediction-backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Redis Cache Metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor (Container Metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx Metrics (if nginx-prometheus-exporter is used)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Application-specific metrics
  - job_name: 'stock-prediction-app'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /api/v1/metrics
    scrape_timeout: 10s
    honor_labels: true

  # Database metrics (if postgres_exporter is used)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Custom business metrics
  - job_name: 'business-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    metrics_path: /api/v1/business-metrics
    scrape_timeout: 15s

  # Health check endpoints
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'backend:8000'
        - 'frontend:80'
        - 'redis:6379'
    scrape_interval: 30s
    metrics_path: /health
    scrape_timeout: 5s

  # AWS CloudWatch metrics (if cloudwatch-exporter is used)
  - job_name: 'cloudwatch'
    ec2_sd_configs:
      - region: us-east-1
        port: 9106
        filters:
          - name: tag:Project
            values: ['stock-prediction']
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance_name
      - source_labels: [__meta_ec2_instance_id]
        target_label: instance_id
      - source_labels: [__meta_ec2_private_ip]
        target_label: __address__
        replacement: '${1}:9106'

# Remote write configuration (for long-term storage)
remote_write:
  # - url: "https://prometheus-remote-write-endpoint"
  #   basic_auth:
  #     username: "username"
  #     password: "password"

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Web configuration
web:
  enable-lifecycle: true
  enable-admin-api: true
  max-connections: 512
  read-timeout: 30s
  route-prefix: /

# Log configuration
log:
  level: info
  format: json