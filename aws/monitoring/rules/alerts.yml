groups:
  # System-level alerts
  - name: system.rules
    rules:
      # High CPU usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"

      # High memory usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 85% for more than 5 minutes on {{ $labels.instance }}"

      # Low disk space
      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 90
        for: 5m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "Low disk space detected"
          description: "Disk usage is above 90% on {{ $labels.instance }} ({{ $labels.mountpoint }})"

      # High load average
      - alert: HighLoadAverage
        expr: node_load15 > 2
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High load average detected"
          description: "Load average is {{ $value }} for more than 10 minutes on {{ $labels.instance }}"

  # Application-level alerts
  - name: application.rules
    rules:
      # Backend service down
      - alert: BackendServiceDown
        expr: up{job="stock-prediction-backend"} == 0
        for: 1m
        labels:
          severity: critical
          service: backend
        annotations:
          summary: "Backend service is down"
          description: "Stock prediction backend service is not responding on {{ $labels.instance }}"

      # Frontend service down
      - alert: FrontendServiceDown
        expr: up{job="nginx"} == 0
        for: 1m
        labels:
          severity: critical
          service: frontend
        annotations:
          summary: "Frontend service is down"
          description: "Frontend/Nginx service is not responding on {{ $labels.instance }}"

      # High API response time
      - alert: HighAPIResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="stock-prediction-backend"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High API response time"
          description: "95th percentile response time is {{ $value }}s for {{ $labels.method }} {{ $labels.endpoint }}"

      # High error rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{job="stock-prediction-backend",status=~"5.."}[5m]) / rate(http_requests_total{job="stock-prediction-backend"}[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          service: backend
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for {{ $labels.method }} {{ $labels.endpoint }}"

      # Low prediction accuracy
      - alert: LowPredictionAccuracy
        expr: prediction_accuracy_percentage < 70
        for: 15m
        labels:
          severity: warning
          service: ml-model
        annotations:
          summary: "Low prediction accuracy"
          description: "Model prediction accuracy dropped to {{ $value }}% for {{ $labels.model_type }}"

  # Database alerts
  - name: database.rules
    rules:
      # Database connection issues
      - alert: DatabaseConnectionHigh
        expr: pg_stat_database_numbackends / pg_settings_max_connections * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High database connections"
          description: "Database connections are at {{ $value }}% of maximum on {{ $labels.instance }}"

      # Database query time
      - alert: SlowDatabaseQueries
        expr: rate(pg_stat_database_tup_fetched[5m]) / rate(pg_stat_database_tup_returned[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Slow database queries detected"
          description: "Database query efficiency is low on {{ $labels.instance }}"

      # Database size growth
      - alert: DatabaseSizeGrowth
        expr: increase(pg_database_size_bytes[1h]) > 1073741824  # 1GB
        for: 0m
        labels:
          severity: info
          service: database
        annotations:
          summary: "Rapid database growth"
          description: "Database {{ $labels.datname }} grew by {{ $value | humanizeBytes }} in the last hour"

  # Redis alerts
  - name: redis.rules
    rules:
      # Redis service down
      - alert: RedisServiceDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis service is down"
          description: "Redis cache service is not responding on {{ $labels.instance }}"

      # High Redis memory usage
      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis high memory usage"
          description: "Redis memory usage is {{ $value }}% on {{ $labels.instance }}"

      # Redis connection spike
      - alert: RedisConnectionSpike
        expr: redis_connected_clients > 100
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis connection spike"
          description: "Redis has {{ $value }} connected clients on {{ $labels.instance }}"

  # Business logic alerts
  - name: business.rules
    rules:
      # Market data feed issues
      - alert: MarketDataFeedDown
        expr: time() - market_data_last_update_timestamp > 300  # 5 minutes
        for: 2m
        labels:
          severity: critical
          service: market-data
        annotations:
          summary: "Market data feed is stale"
          description: "No market data updates received for {{ $value }}s from {{ $labels.source }}"

      # Prediction processing backlog
      - alert: PredictionBacklog
        expr: prediction_queue_size > 1000
        for: 10m
        labels:
          severity: warning
          service: ml-processing
        annotations:
          summary: "High prediction processing backlog"
          description: "Prediction queue has {{ $value }} pending requests"

      # User activity drop
      - alert: LowUserActivity
        expr: rate(user_requests_total[1h]) < 10
        for: 30m
        labels:
          severity: info
          service: user-activity
        annotations:
          summary: "Low user activity detected"
          description: "User request rate dropped to {{ $value }} requests/hour"

      # Trading signal accuracy
      - alert: TradingSignalAccuracy
        expr: trading_signal_accuracy_24h < 0.6
        for: 1h
        labels:
          severity: warning
          service: trading-signals
        annotations:
          summary: "Trading signal accuracy below threshold"
          description: "24-hour trading signal accuracy is {{ $value | humanizePercentage }}"

  # Security alerts
  - name: security.rules
    rules:
      # High failed login attempts
      - alert: HighFailedLogins
        expr: rate(failed_login_attempts_total[5m]) > 10
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High failed login attempts"
          description: "{{ $value }} failed login attempts per second from {{ $labels.source_ip }}"

      # Suspicious API usage
      - alert: SuspiciousAPIUsage
        expr: rate(http_requests_total{status="429"}[5m]) > 5
        for: 5m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High rate limiting triggers"
          description: "{{ $value }} rate limit violations per second on {{ $labels.endpoint }}"

      # SSL certificate expiry
      - alert: SSLCertificateExpiry
        expr: (ssl_certificate_expiry_timestamp - time()) / 86400 < 30
        for: 1h
        labels:
          severity: warning
          service: security
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate for {{ $labels.domain }} expires in {{ $value }} days"

  # Infrastructure alerts
  - name: infrastructure.rules
    rules:
      # Container restart frequency
      - alert: ContainerRestartLoop
        expr: rate(container_start_time_seconds[15m]) > 0.1
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Container restart loop detected"
          description: "Container {{ $labels.name }} is restarting frequently on {{ $labels.instance }}"

      # Network connectivity issues
      - alert: NetworkConnectivityIssues
        expr: rate(node_network_receive_errs_total[5m]) > 10
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Network errors detected"
          description: "Network interface {{ $labels.device }} has {{ $value }} errors/sec on {{ $labels.instance }}"

      # Backup failure
      - alert: BackupFailure
        expr: time() - backup_last_success_timestamp > 86400  # 24 hours
        for: 1h
        labels:
          severity: critical
          service: backup
        annotations:
          summary: "Backup failure detected"
          description: "No successful backup for {{ $labels.backup_type }} in the last 24 hours"